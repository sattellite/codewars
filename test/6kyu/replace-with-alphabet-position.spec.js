const alphabetPosition = require('../../6kyu/replace-with-alphabet-position');

describe('#6kyu ReplaceWithAlphabetPosition', () => {
  it('tests for each letter', () => {
    assert.equal(alphabetPosition('A'), '1');
    assert.equal(alphabetPosition('B'), '2');
    assert.equal(alphabetPosition('C'), '3');
    assert.equal(alphabetPosition('D'), '4');
    assert.equal(alphabetPosition('E'), '5');
    assert.equal(alphabetPosition('F'), '6');
    assert.equal(alphabetPosition('G'), '7');
    assert.equal(alphabetPosition('H'), '8');
    assert.equal(alphabetPosition('I'), '9');
    assert.equal(alphabetPosition('J'), '10');
    assert.equal(alphabetPosition('K'), '11');
    assert.equal(alphabetPosition('L'), '12');
    assert.equal(alphabetPosition('M'), '13');
    assert.equal(alphabetPosition('N'), '14');
    assert.equal(alphabetPosition('O'), '15');
    assert.equal(alphabetPosition('P'), '16');
    assert.equal(alphabetPosition('Q'), '17');
    assert.equal(alphabetPosition('R'), '18');
    assert.equal(alphabetPosition('S'), '19');
    assert.equal(alphabetPosition('T'), '20');
    assert.equal(alphabetPosition('U'), '21');
    assert.equal(alphabetPosition('V'), '22');
    assert.equal(alphabetPosition('W'), '23');
    assert.equal(alphabetPosition('X'), '24');
    assert.equal(alphabetPosition('Y'), '25');
    assert.equal(alphabetPosition('Z'), '26');
  });

  it('tests for random sequences', () => {
    assert.equal(alphabetPosition('l{o91]xp'), '12 15 24 16');
    assert.equal(alphabetPosition(']9=6^on1'), '15 14');
    assert.equal(alphabetPosition('4){<8g:!'), '7');
    assert.equal(alphabetPosition('b!k z+$7'), '2 11 26');
    assert.equal(alphabetPosition('bl/zx}+@'), '2 12 26 24');
    assert.equal(alphabetPosition('j80=<rv6'), '10 18 22');
    assert.equal(alphabetPosition('=[(%;,2p'), '16');
    assert.equal(alphabetPosition('c={x/x^z'), '3 24 24 26');
    assert.equal(alphabetPosition('t2v=inx1'), '20 22 9 14 24');
    assert.equal(alphabetPosition('}&e_|gya'), '5 7 25 1');
    assert.equal(alphabetPosition('>6xo*#|<'), '24 15');
    assert.equal(alphabetPosition('3nj@w0v<'), '14 10 23 22');
    assert.equal(alphabetPosition('!ui--?pu'), '21 9 16 21');
    assert.equal(alphabetPosition('1z/]9=ia'), '26 9 1');
    assert.equal(alphabetPosition('2>.z/wj_'), '26 23 10');
    assert.equal(alphabetPosition('6_rp!_<o'), '18 16 15');
    assert.equal(alphabetPosition('^^ma:%/0'), '13 1');
    assert.equal(alphabetPosition('@[squ(<_'), '19 17 21');
    assert.equal(alphabetPosition('p!(_*41q'), '16 17');
    assert.equal(alphabetPosition('h&h+.#b!'), '8 8 2');
    assert.equal(alphabetPosition('k5m*6)29'), '11 13');
    assert.equal(alphabetPosition('hl$:4,r5'), '8 12 18');
    assert.equal(alphabetPosition('=6(:}1.>'), '');
    assert.equal(alphabetPosition('5yg;n=eq'), '25 7 14 5 17');
    assert.equal(alphabetPosition('(}v8 -k]'), '22 11');
    assert.equal(alphabetPosition('?cgp_(qo'), '3 7 16 17 15');
    assert.equal(alphabetPosition('dxi$v>jy'), '4 24 9 22 10 25');
    assert.equal(alphabetPosition('ibgm%<ph'), '9 2 7 13 16 8');
    assert.equal(alphabetPosition('c{,mq^e)'), '3 13 17 5');
    assert.equal(alphabetPosition('^x:mtlu^'), '24 13 20 12 21');
    assert.equal(alphabetPosition('/c;+p9k.'), '3 16 11');
    assert.equal(alphabetPosition('_s4?&0o='), '19 15');
    assert.equal(alphabetPosition('9mn1e2}y'), '13 14 5 25');
    assert.equal(alphabetPosition('4+7p?94o'), '16 15');
    assert.equal(alphabetPosition('cx*689*-'), '3 24');
    assert.equal(alphabetPosition('.0?4,=k0'), '11');
    assert.equal(alphabetPosition('4*xjpe;m'), '24 10 16 5 13');
    assert.equal(alphabetPosition('n_2$@< e'), '14 5');
    assert.equal(alphabetPosition('z$v_4_2m'), '26 22 13');
    assert.equal(alphabetPosition('za+=rl<i'), '26 1 18 12 9');
    assert.equal(alphabetPosition('dk2d+t9y'), '4 11 4 20 25');
    assert.equal(alphabetPosition(';2wl>dow'), '23 12 4 15 23');
    assert.equal(alphabetPosition('2g)2?;=<'), '7');
    assert.equal(alphabetPosition('h6mb(^70'), '8 13 2');
    assert.equal(alphabetPosition('c3*2.b?r'), '3 2 18');
    assert.equal(alphabetPosition('@!|0i56^'), '9');
    assert.equal(alphabetPosition('akr} [x!'), '1 11 18 24');
    assert.equal(alphabetPosition('m,.*/? #'), '13');
    assert.equal(alphabetPosition(',f}yx]-c'), '6 25 24 3');
    assert.equal(alphabetPosition('-&/*1cf7'), '3 6');
  });
});
